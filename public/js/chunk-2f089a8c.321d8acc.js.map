{"version":3,"sources":["webpack:///./src/components/aws/InitAws.vue?dcf2","webpack:///src/components/aws/InitAws.vue","webpack:///./src/components/aws/InitAws.vue?2bf3","webpack:///./src/components/aws/InitAws.vue","webpack:///./src/factories/ApiAws.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","checkAndSaveAwsKeys","_m","_v","attrs","hasCred","_s","computedKey","directives","name","rawName","value","expression","domProps","$event","target","composing","awsKey","_e","awsSecret","isCheckingKey","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","selectedBucketName","multiple","selectBucket","_l","bucket","Name","staticRenderFns","component","listBuckets","CheststoreFetch","response","handleFetchResponse","checkAndSaveKey","method","headers","body","JSON","stringify","saveBucket","bucketName","syncCurrentBucket"],"mappings":"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","file":"js/chunk-2f089a8c.321d8acc.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4 offset-lg-4\"},[_c('form',{on:{\"submit\":_vm.checkAndSaveAwsKeys}},[_c('div',{staticClass:\"card no-shadow\"},[_vm._m(0),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"small mb-3\"},[_vm._v(\"In order to integrate with your AWS account and S3 bucket(s), you need to enter a valid AWS Access Key and Secret we will use to make API requests to sync your S3 bucket information.\")]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"aws-key\"}},[_vm._v(\"AWS Access Key\")]),(!_vm.hasCred)?[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.awsKey),expression:\"awsKey\"}],staticClass:\"form-control\",attrs:{\"id\":\"aws-key\"},domProps:{\"value\":(_vm.awsKey)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.awsKey=$event.target.value}}})]:_c('div',[_c('strong',[_vm._v(_vm._s(_vm.computedKey))])])],2),(!_vm.hasCred)?[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"aws-secret\"}},[_vm._v(\"AWS Access Secret\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.awsSecret),expression:\"awsSecret\"}],staticClass:\"form-control\",attrs:{\"id\":\"aws-secret\",\"type\":\"password\"},domProps:{\"value\":(_vm.awsSecret)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.awsSecret=$event.target.value}}})]),_c('div',{staticClass:\"form-group d-flex justify-content-center\"},[(!_vm.isCheckingKey)?_c('button',{staticClass:\"btn btn-primary\"},[_vm._v(\"Add Key\")]):_c('loader')],1)]:_vm._e(),(_vm.hasCred)?[_c('hr'),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"all-buckets\"}},[_vm._v(\"Select Bucket\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedBucketName),expression:\"selectedBucketName\"}],staticClass:\"form-control\",attrs:{\"id\":\"all-buckets\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedBucketName=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.selectBucket]}},_vm._l((_vm.buckets),function(bucket){return _c('option',{domProps:{\"value\":bucket.Name}},[_vm._v(_vm._s(bucket.Name))])}),0)])]:_vm._e()],2)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-header border-0\"},[_c('h3',{staticClass:\"m-0\"},[_vm._v(\"Enter your AWS Access Key\")])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n  div.row\n    div.col-lg-4.offset-lg-4\n      form(@submit=\"checkAndSaveAwsKeys\")\n        div.card.no-shadow\n          div.card-header.border-0\n            h3.m-0 Enter your AWS Access Key\n          div.card-body\n            div.small.mb-3\n              | In order to integrate with your AWS account and S3 bucket(s),\n              | you need to enter a valid AWS Access Key and Secret we will\n              | use to make API requests to sync your S3 bucket information.\n            div.form-group\n              label(for=\"aws-key\") AWS Access Key\n              template(v-if=\"!hasCred\")\n                input#aws-key.form-control(v-model=\"awsKey\")\n              div(v-else)\n                strong {{ computedKey }}\n            template(v-if=\"!hasCred\")\n              div.form-group\n                  label(for=\"aws-secret\") AWS Access Secret\n                  input#aws-secret.form-control(type=\"password\",v-model=\"awsSecret\")\n              div.form-group.d-flex.justify-content-center\n                button.btn.btn-primary(v-if=\"!isCheckingKey\") Add Key\n                loader(v-else)\n            template(v-if=\"hasCred\")\n              hr\n              div.form-group\n                label(for=\"all-buckets\") Select Bucket\n                select#all-buckets.form-control(v-model=\"selectedBucketName\",@change=\"selectBucket\")\n                  option(v-for=\"bucket in buckets\",:value=\"bucket.Name\") {{ bucket.Name }}\n\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  import ApiAws from '../../factories/ApiAws'\n\n  export default {\n    data() {\n      return {\n        isCheckingKey: false,\n        awsKey: null,\n        awsSecret: null,\n\n        buckets: [],\n        selectedBucketName: null\n      }\n    },\n\n    computed: {\n      ...mapState({\n        hasCred: state => state.session.current_credential\n      }),\n\n      computedKey() {\n        return (this.hasCred && this.hasCred.key) || this.awsKey\n      }\n    },\n\n    methods: {\n      async checkAndSaveAwsKeys(evt) {\n        try {\n          evt.preventDefault()\n\n          if (!(this.computedKey && this.awsSecret))\n            return window.toastr.error(`Please enter both and access key and secret to add.`)\n\n          this.isCheckingKey = true\n          await ApiAws.checkAndSaveKey(this.computedKey, this.awsSecret)\n          await Promise.all([\n            this.$store.dispatch('getUserSession', true),\n            this.listBuckets()\n          ])\n\n        } catch(err) {\n          window.toastr.error(err.message)\n        } finally {\n          this.isCheckingKey = false\n        }\n      },\n\n      async selectBucket() {\n        try {\n          if (!this.selectedBucketName)\n            return window.toastr.error(`Please enter a valid bucket to integrate with.`)\n\n          await ApiAws.saveBucket(this.selectedBucketName)\n          await this.$store.dispatch('getUserSession', true)\n          this.$router.push('/')\n\n        } catch(err) {\n          window.toastr.error(err.message)\n        }\n      },\n\n      async listBuckets() {\n        try {\n          const { Buckets } = await ApiAws.listBuckets()\n          this.buckets = Buckets\n\n        } catch(err) {\n          window.toastr.error(err.message)\n        }\n      }\n    },\n\n    async created() {\n      if (this.hasCred)\n        await this.listBuckets()\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InitAws.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InitAws.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InitAws.vue?vue&type=template&id=5261e5ce&lang=pug&\"\nimport script from \"./InitAws.vue?vue&type=script&lang=js&\"\nexport * from \"./InitAws.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import CheststoreFetch from './CheststoreFetch'\nimport { handleFetchResponse } from './ApiHelpers'\n\nexport default {\n  async listBuckets() {\n    const response = await CheststoreFetch(`/api/1.0/aws/buckets/list`)\n    return await handleFetchResponse(response)\n  },\n\n  async checkAndSaveKey(awsKey, awsSecret) {\n    const response = await CheststoreFetch(`/api/1.0/aws/key/check/save`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ awsKey, awsSecret })\n    })\n    return await handleFetchResponse(response)\n  },\n\n  async saveBucket(bucketName) {\n    const response = await CheststoreFetch(`/api/1.0/aws/bucket/save`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ bucket: bucketName })\n    })\n    return await handleFetchResponse(response)\n  },\n\n  async syncCurrentBucket() {\n    const response = await CheststoreFetch(`/api/1.0/aws/bucket/sync`)\n    return await handleFetchResponse(response)\n  }\n}\n"],"sourceRoot":""}